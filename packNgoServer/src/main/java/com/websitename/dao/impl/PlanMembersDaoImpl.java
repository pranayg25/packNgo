package com.websitename.dao.impl;

import java.util.List;

import javax.xml.crypto.dsig.Transform;

import org.hibernate.Criteria;
import org.hibernate.HibernateException;
import org.hibernate.criterion.Restrictions;
import org.hibernate.transform.ResultTransformer;
import org.hibernate.transform.Transformers;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.websitename.dao.PlanMembersDao;
import com.websitename.entities.PlanMembers;
import com.websitename.entities.User;
import com.websitename.utils.Utils;


/**
 * DAO for table: PlanMembers.
 * @author autogenerated
 */
@Repository
public class PlanMembersDaoImpl extends GenericHibernateDaoImpl<PlanMembers, String> implements PlanMembersDao {

	/** Constructor method. */
	public PlanMembersDaoImpl() {
		super(PlanMembers.class);
	}

	@Override
	@Transactional(readOnly = true, propagation = Propagation.REQUIRED)
	public List<PlanMembers> getByCriteria(PlanMembers members) throws Exception {
		try {
			Criteria crit = getSession().createCriteria(getPersistentClass());

			if(members.getPlan()!=null){
				crit.add(Restrictions.eq("plan",members.getPlan()));
			}
			if(members.getUser()!=null){
				crit.add(Restrictions.eq("user",members.getUser()));
			}
			crit.setResultTransformer(Criteria.DISTINCT_ROOT_ENTITY);
			
			return crit.list();

		} catch (HibernateException e) {
			throw e;
		}	

	}
}

